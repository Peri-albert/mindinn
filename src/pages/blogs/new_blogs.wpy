<style lang="less">
page {
	box-sizing: border-box;
	min-height: 100vh;
	overflow-x: hidden;
	padding-bottom: 108rpx;
	//单行省略号
	.singleLineOmit {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}
	//flex居中
	.flexCenter {
		align-items: center;
		display: flex;
		justify-content: center;
	}

	.container {
		background-color: #fff;
		box-sizing: border-box;
		overflow-x: hidden;
		padding: 14rpx 0 0;

		//banner轮播
		.banner {
			background-color: #fff;
			box-sizing: border-box;
			border-radius: 12rpx;
			height: 150rpx;
			margin: 0 auto 18rpx;
			width: 710rpx;

			swiper-item {
				border-radius: 12rpx;
				overflow: hidden;

				image {
					display: block;
					height: 100%;
					width: 100%;
				}
			}
		}
		//话题签到等入口
		.entrances {
			display: flex;
			height: 200rpx;
			justify-content: space-around;
			width: 100%;

			.entrance {
				flex-direction: column;
				height: 100%;
				width: 150rpx;
				.flexCenter;

				.entrance-icon {
					display: block;
					height: 100rpx;
					margin-bottom: 20rpx;
					width: 91rpx;
				}

				.entrance-name {
					color: #666;
					font-size: 22rpx;
				}
			}
		}
		//新建（悬赏，动态，霸屏）按钮
		.create-btn {
			background: url(https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/create_btn_bg.png) no-repeat;
			background-size: 100%;
			bottom: 158rpx;
			color: #fff;
			height: 110rpx;
			position: fixed;
			right: 10rpx;
			width: 110rpx;
			z-index: 99;
			.flexCenter;

			image {
				display: block;
				height: 44rpx;
				transition: .3s;
				width: 46rpx;
			}
		}
		//新建按钮弹出项
		.create-picks {
			background-color: #fff;
			border: 1rpx solid #eee;
			border-radius: 8rpx;
			box-sizing: border-box;
			bottom: 270rpx;
			opacity: 0;
			padding: 30rpx 0 0;
			position: fixed;
			right: 10rpx;
			transition: .3s;
			visibility: hidden;
			width: 100rpx;
			z-index: 99;

			&.show {
				bottom: 300rpx;
				opacity: 1;
				visibility: visible;
			}

			.create-pick {
				align-items: center;
				display: flex;
				flex-direction: column;
				margin-bottom: 30rpx;
				width: 100%;

				.pick-img {
					display: block;
					height: 70rpx;
					width: 70rpx;
				}

				.pick-name {
					font-size: 20rpx;
				}
			}
		}
		//动态和悬赏tab
		.tabs {
			background-color: #fff;
			box-sizing: border-box;
			display: flex;
			height: 84rpx;
			margin-bottom: 4rpx;
			padding-left: 57rpx;

			.tab {
				color: #666;
				font-size: 24rpx;
				height: 84rpx;
				line-height: 84rpx;
				margin-right: 40rpx;
				padding: 0 20rpx;
				&.active {
					color: #333;
					font-size: 36rpx;
					font-weight: bold;
					position: relative;
				}
				&.active::after {
					background-color: #333;
					border-radius: 5rpx;
					content: '';
					bottom: 0;
					height: 4rpx;
					left: 0;
					position: absolute;
					width: 100%;
				}
			}
		}
		//#热门话题
		.hot-topic {
			background-color: #fff;
			border-bottom: 16rpx solid #eee;
			border-top: 16rpx solid #eee;
			box-sizing: border-box;
			margin-top: -16rpx;
			padding: 14rpx 26rpx;
			width: 100vw;

			.ht-header {
				align-items: flex-end;
				box-sizing: border-box;
				display: flex;
				font-size: 26rpx;
				justify-content: space-between;
				margin-bottom: 20rpx;

				.ht-more {
					color: #666;
					font-size: 20rpx;
				}
			}

			.ht-topics {
				display: flex;
				justify-content: space-between;
				position: relative;
				width: 100%;

				.ht-topic {
					border-radius: 12rpx;
					height: 140rpx;
					overflow: hidden;
					width: 219rpx;

					.black-layer {
						align-items: center;
						background: rgba(0, 0, 0, .4);
						box-sizing: border-box;
						color: #fff;
						display: flex;
						flex-direction: column;
						font-size: 22rpx;
						height: 100%;
						justify-content: space-between;
						padding: 20rpx 24rpx;
						width: 100%;

						.ht-topic-content {
							display: -webkit-box;
							display: -moz-box;
							font-size: 24rpx;
							-webkit-line-clamp: 2;
							-webkit-box-orient: vertical;
							-moz-line-clamp: 2;
							-moz-box-orient: vertical;
							overflow: hidden;
							text-overflow: ellipsis;
							max-width: 100%;
						}
					}
				}
			}
		}
		//悬赏列表
		.blogs-wrapper {
			background-color: #eee;
		}
	}
}
</style>
<template>
	<view class="container">
		<!-- banner轮播 -->
		<!-- <swiper class="banner" interval="5000" duration="1200" indicator-color="#fff" indicator-active-color="#ff6602" indicator-dots autoplay circular>
			<block wx:for="{{ads}}" wx:key="id">
				<swiper-item>
					<image mode="aspectFill" src="{{item.cover}}" @tap.stop="onTapEnterAd({{item}})"></image>
				</swiper-item>
			</block>
		</swiper> -->
		<!-- 话题签到等入口 -->
		<view class="entrances">
			<block wx:for="{{entranceArray}}" wx:key="id">
				<view class="entrance" @tap.stop="tapNavigateTo({{item.url}})">
					<image class="entrance-icon" src="{{item.imgUrl}}"></image>
					<text class="entrance-name">{{item.name}}</text>
				</view>
			</block>
		</view>
		<!-- #热门话题(排在推荐下第四个位置) -->
		<view wx:if="{{currentTab == 'recommend'}}" class="hot-topic">
			<view class="ht-header">
				<view class="ht-title">#热门话题</view>
				<view class="ht-more" @tap.stop="tapNavigateTo('/pages/reward_topic/topic_list')">更多话题></view>
			</view>
			<view class="ht-topics">
				<block wx:for="{{hotTopicArray}}" wx:key='id'>
					<view class="ht-topic" style="background: url({{item.url}}) no-repeat;background-size:cover;" @tap.stop="tapEnterTopicDetail({{item}})">
						<view class="black-layer">
							<view class="ht-topic-content">{{item.title ? item.title : '加载中···'}}</view>
							<view class="ht-topic-reward">{{item.reward_count ? item.reward_count : 0}}条</view>
						</view>
					</view>
				</block>
			</view>
		</view>
		<!-- 动态和悬赏列表(3个占位) -->
		<view class="blogs-wrapper" style="padding-top: 4rpx;">
			<!-- 动态和悬赏tab -->
			<view class="tabs">
				<view class="tab {{currentTab == 'recommend' ? 'active' : ''}}" @tap.stop="tapSwitchTab('recommend')">推荐</view>
				<view class="tab {{currentTab == 'hot' ? 'active' : ''}}" @tap.stop="tapSwitchTab('hot')">附近</view>
			</view>
			<repeat for="{{BlogsArray1}}" key="id" item="blog">
				<new-blog :blog.sync="blog"></new-blog>
			</repeat>
		</view>
		
		<!-- 动态和悬赏列表 -->
		<view class="blogs-wrapper">
			<repeat for="{{BlogsArray2}}" key="id" item="blog">
				<new-blog :blog.sync="blog"></new-blog>
			</repeat>
		</view>
		<!-- 新建（悬赏，动态，霸屏）按钮 -->
		<!-- <view class="create-btn" src="https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/blogs/pub.png" @tap.stop="tapCreateBtn">
			<image src="https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/create_btn_pic.png" style="transform: rotate({{createPicksShow? '-90deg' : '0'}});"></image>
		</view> -->
		<!-- 新建按钮弹出项 -->
		<view class="create-picks {{createPicksShow ? 'show' : ''}}">
			<block wx:for="{{createPicksArray}}" wx:key="name">
				<view class="create-pick" @tap.stop="tapNavigateTo({{item.url}})">
					<image class="pick-img" src="{{item.imgUrl}}"></image>
					<view class="pick-name">{{item.name}}</view>
				</view>
			</block>
		</view>
	</view>
	<bottomloader :isFinishLoad.sync="isFinishLoad"></bottomloader>
	<bottomnavi :current.sync="current"></bottomnavi>
</template>
<script>
import wepy from 'wepy'
const app = getApp()
import NewBlog from '../../components/new_blog'
import BlogService from '../../services/blog_service'
import UserService from '../../services/user_service'
import BarService from '../../services/bar_service'
import BlogCommentService from '../../services/blog_comment_service'
import AccountService from '../../services/account_service'
import _ from '../../lib/mptool'
import Session from '../../lib/session'
import BottomNavi from '../../components/bottom_navi'
import BottomLoader from '../../components/bottom_loader';
import StorageService from '../../services/storage_service';
import WebIMService from '../../services/webim_service'
import AdService from '../../services/ad_service';

export default class NewBlogs extends wepy.page {
	config = {
		navigationBarTitleText: "首页",
		enablePullDownRefresh: true
	}

	components = {
		'new-blog': NewBlog,
		bottomnavi: BottomNavi,
		bottomloader: BottomLoader,
	}

	mixins = []

	data = {
		current: 'find',
		tab2blogs: { 0: [] },
		entranceArray: [
			{name: '话题', imgUrl: 'https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/topic_btn.png', url: '/pages/reward_topic/topic_list'},
			{name: '悬赏', imgUrl: 'https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/reward_btn.png', url: '/pages/reward_topic/reward_list'},
			{name: '排行榜', imgUrl: 'https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/ranking_btn.png', url: '/pages/ranking/ranking'},
			{name: '每日签到', imgUrl: 'https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/signin_btn.png', url: '/pages/signin/signin'}
		],  //各入口数据
		createPicksArray: [
			{name: '悬赏', imgUrl: 'https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/create_reward_icon.png', url: '/pages/post_blog/post_newblog?type=reward'},
			{name: '动态', imgUrl: 'https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/create_dating_icon.png', url: '/pages/post_blog/post_newblog?type=dating'},
			{name: '霸屏', imgUrl: 'https://vxiaocheng-jh.oss-cn-beijing.aliyuncs.com/mercury/new_blogs/create_broadcast_icon.png', url: '/pages/post_blog/post_newblog?type=boradcast'}
		],  //新建项目数据
		createPicksShow: false,  //新建项显隐
		ads: [],
		userId: 0,
		hotTopicArray: [{}, {}, {}],  //热门话题数据
		currentTab: 'recommend',
		BlogsArray: [],
		BlogsArray1: [],  //前3个
		BlogsArray2: [],  //之后的
		isFinishLoad: false,
		innerAudioContext: '',
		audioPlayingExtraInfo: {},
		audioPlaying: '',
		selfInfo: '',
		signed: false
	}


	computed = {

	}

	methods = {
		onTapEnterAd(ad) {
			if (ad.url) {
				let url = '/package/pages/ad/web_ad?url=' + ad.url;
				if (ad.url.indexOf("mercury@") !== -1) {
					url = ad.url.split("@")[1];
				}
				if (url == "/pages/group/bars" || url == "/pages/challenge/challenge") {
					wx.switchTab({
						url: url
					})
				} else {
					wx.navigateTo({
						url: url,
					})
				}
			} else {
				wx.navigateTo({
					url: '/package/pages/ad/rxt_ad?id=' + ad.id,
				})
			}
		},
		async onTapSignin() {
			let data = await UserService.isSignin();
        	if (data.is_sign_in) {
            	wx.showToast({
					"title": "您今天已经打过卡了!",
					"icon": "none",
					"duration": 1500
				})
				return;
        	} else {
            	let signin = await UserService.signin();
				if (signin.success) {
					wx.navigateTo({
						url: '/pages/signin/signin?count=' + signin.gift_count,
					})
				} else {
					wx.showToast({
						"title": "没有打卡成功呢!",
						"icon": "none",
						"duration": 1500
					})
					return;
				}
			   }
			app.aldstat.sendEvent("打卡", {
				"用户ID": this.userId + "",
				"时间": _.getAldTime()
			})
		},
		//各入口跳转
		tapNavigateTo(url) {
			if (url == "/pages/signin/signin") {
				// this.methods.onTapSignin();
				let title = this.signed ? '您今天已经打过卡了' : '签到成功'
				let icon = this.signed ? 'none' : 'success'
				wx.showToast({
					title: title,
					icon: icon,
					duration: 1500
				})
				this.signed = true
				this.$apply()
				return;
			}

			if (url == "/pages/ranking/ranking") {
				wx.showToast({
					title: '敬请期待',
					icon: 'none',
					duration: 1500
				})
				return;
			}
			wx.navigateTo({
				url: url
			})
			this.createPicksShow ? this.createPicksShow = false : ''
			
			let msg = "";
			if (url == "/pages/reward_topic/topic_list") {
				msg = "查看话题列表";
			} else if (url == "/pages/ranking/ranking") {
				msg = "查看排行榜";

			} else if (url == "/pages/reward_topic/reward_list") {
				msg = "查看悬赏列表";
			} else if (url == "/pages/signin/signin") {
				msg = "每日签到";
			} else if (url == "/pages/post_blog/post_newblog") {
				msg = "跳转发布动态";
			}


		},
		//tabs切换
		tapSwitchTab(tabTxt) {
			if (this.currentTab == tabTxt) {
				return;
			}

			this.isFinishLoad = false;
			this.currentTab = tabTxt == 'recommend' ? 'recommend' : 'hot';
			this.$apply();
			this.loadNextBlogs(tabTxt, true);
		},
		//3热门话题进入
		tapEnterTopicDetail(item) {
			let id = item.id,
				title = item.title,
				url = item.url,
				count = item.reward_count;
			wx.navigateTo({
				url: `/pages/reward_topic/topic_detail?topicId=${id}&topicTitle=${title}&imgUrl=${url}&blogCount=${count}`
			})
		},
		//新建按钮
		tapCreateBtn() {
			// this.createPicksShow = !this.createPicksShow
			wx.navigateTo({
				url: `/pages/post_blog/post_newblog?type=dating`
			})
		}
	}

	events = {
		'tap-upvote': function(blogId) {
			let curBlog = this.BlogsArray2.find(e => e.id == blogId)
			if (!curBlog.is_liked_by_current_user) {
				curBlog.like_count += 1
				curBlog.is_liked_by_current_user = true
				this.$apply()
			}else {
				curBlog.like_count -= 1
				curBlog.is_liked_by_current_user = false
				this.$apply()
			}
		},
		'play-video': function(blogId) {
			this.BlogsArray2.forEach(e => {
				e.playVideo = false
				if (e.id == blogId) {
					e.playVideo = true
				}
			})
			this.innerAudioContext.stop()
			this.BlogsArray2.forEach(e => e.audioActive = false)
			this.$apply()
		},
		'play-audio': function(blogId) {
			this.BlogsArray2.forEach(e => e.playVideo = false)
			this.$apply()
			if (this.audioPlaying && this.audioPlaying.id == blogId) {
				if (this.innerAudioContext.paused) {
					this.innerAudioContext.play()
					this.audioPlaying.audioActive = true
					console.log('点击播放')
				}else {
					this.innerAudioContext.stop()
					this.audioPlaying.audioActive = false
					clearTimeout(this.audioPlayingExtraInfo.timeOut)
					console.log('点击停止')
				}
				this.$apply()
				return
			}
			this.audioPlaying = this.BlogsArray2.find(e => e.id == blogId)
			this.BlogsArray2.forEach(e => e.audioActive = false)
			this.audioPlaying.audioActive = true
			this.innerAudioContext.src = this.audioPlaying.resources[0].url
			this.innerAudioContext.play()		
			this.$apply()
		},
		'fitOneImage': (blogId, property) => {
			this.BlogsArray.find(e => e.id == blogId)[property] = true
		},
		'delete-blog': (blog) => {
			this.BlogsArray1 = this.BlogsArray1.filter(blg => {
				return blg.id != blog.id;
			});
			this.BlogsArray2 = this.BlogsArray2.filter(blg => {
				return blg.id != blog.id;
			});
			this.$apply();
		},
		'blog-input-change': (blogId, txt) => {
			this.selfInfo ? '' : UserService.getUserInfo().then(res => this.selfInfo = res)

			if (this.BlogsArray.find(e => e.id == blogId)) {
				this.BlogsArray.find(e => e.id == blogId).inputValue = txt
			}else {
				wx.showToast({
					title: '查无此blog',
					icon: 'none',
					duration: 1500
				})
				console.log('查无此blog')
			}
		},
		'send-comment': (blogId) => {
			if (this.BlogsArray.find(e => e.id == blogId)) {
				const blog = this.BlogsArray.find(e => e.id == blogId)
				const inputValue = blog.inputValue
				const params = {
					'type': 'blog',
					'toUser': blog.author.id,
					'name': this.selfInfo.name,
					'topic': blog.content
				}

				if (!blog.inputValue || !blog.inputValue.trim()) {
					wx.showToast({
						title: '请输入评论内容',
						icon: 'none',
						duration: 1500
					})
					return;
				}

				BlogCommentService.commentBlog(blog.id, blog.inputValue, 0, params).then(res => {
					if (res.isSuccess) {
						blog.comments.unshift({
							id: Math.ceil(Math.random() * 1000),
							author: {name: this.selfInfo.name},
							content: inputValue,
							contentData: [{data: inputValue, type: 'txt'}]
						})
						blog.inputValue = ''
						this.$apply()
					} else {
						let msg = res.title;
						wx.showToast({
							title: msg,
							icon: 'none',
							duration: 1500
						})
						console.log('评论失败')
						return;
					}
				})
			}else {
				wx.showToast({
					title: '请先输入评论内容',
					icon: 'none',
					duration: 1500
				})
			}
		}
	}

	loadAds() {
		AdService.getAds("broadcast").then(
			data => {
				this.ads = data;
				this.$apply();
				console.log(this.ads);
			}
		)
	}

	async onLoad(query) {
		this.proporation = 750 / wx.getSystemInfoSync().windowWidth
		this.userId = AccountService.getSelfId();
		wx.hideTabBar({})

		// 被拉黑用户直接清除缓存重定向至登录页面
		// AccountService.checkUserBlock().then(
		// 	data => {
		// 		if (data.is_block) {
		// 			Session.clear();
		// 			wx.redirectTo({
		// 				url: '/pages/login/login'
		// 			});
		// 		}
		// 	}
		// )

		// let forceUpdate = StorageService.getAndClear("forceUpdate");
		// if (forceUpdate) {
		// 	AccountService.updateVersion();
		// }

		this.loadAds();
		// 创建音频对象
		this.innerAudioContext = wx.createInnerAudioContext()
		this.innerAudioContext.onError(e => {
			console.log('innerAudioContext.onError(e) => e', e)
		})
		this.innerAudioContext.onPlay(e => {
			console.log('innerAudioContext.onPlay(e) => e', e)
			clearTimeout(this.audioPlayingExtraInfo.timeOut)
			this.audioPlayingExtraInfo.timeOut = setTimeout(() => {
				this.innerAudioContext.stop()
				this.audioPlaying.audioActive = false
				this.$apply()
				console.log(`${+this.audioPlaying.content * 1000}s后停止播放效果，因为onPlay()里的计时器, this.innerAudioContext = ${this.innerAudioContext}`, this.innerAudioContext)
			}, +this.audioPlaying.content * 1000)
		})
	}

	onShow() {
		let updateBlogInfo = StorageService.getAndClear("update_blog");
		if (updateBlogInfo) {
			this.BlogsArray.forEach(blog => {
				if (blog.id == updateBlogInfo.id) {
					blog.comment_count = updateBlogInfo.count
				}
			});
		}

		//获取最热3话题
		BlogService.getThreeHotTopic().then(res => {
			this.hotTopicArray = res
			this.$apply()
		})
		this.createPicksShow = false;
		console.log(this.createPicksShow)

		const trends = Session.getKey('trends') ? JSON.parse(Session.getKey('trends')) : ''
		if (trends) {
			console.log('trends', trends)
			trends.forEach(trend => {
				if (!this.BlogsArray2.find(e => e.id == trend.id)) {
					this.BlogsArray2.unshift({
						address: trend.address,
						adopt_mpcoin: 0,
						amount: 0,
						author: {
							avatar: 'http://resource.vxiaocheng.com/upload/persistent_avatar/384069933.jpg',
							callup_doyen: false,
							code: "301138012",
							id: 1137699,
							name: "居然还会有人",
							sex: 'male'
						},
						comment_count: 0,
						comments: [],
						content: trend.content,
						id: trend.id,
						created_ago: '刚刚',
						type: trend.type,
						resources: trend.resources,
						is_liked_by_current_user: false
					})
				}
			})
			this.$apply()
		}

		// 根据storage判断更改动态的点赞状态
		const upvote = Session.getKey('trendsUpvote') ? JSON.parse(Session.getKey('trendsUpvote')) : ''
		if (this.BlogsArray.length && upvote) {
			let curBlog = this.BlogsArray.find(e => e.id == upvote.blogId)

			if (!curBlog) return;
			if (!curBlog.is_liked_by_current_user) {
				if (upvote.upvote) {
					UserService.likeBlog(curBlog.blogId).then(res => {
						curBlog.like_count += 1
						curBlog.is_liked_by_current_user = true
						this.$apply()
					})
				}else {
					return;
				}
			}else {
				if (!upvote.upvote) {
					UserService.unlikeBlog(curBlog.blogId).then(res => {
						curBlog.like_count -= 1
						curBlog.is_liked_by_current_user = false
						this.$apply()
					})
				}else {
					return;
				}
			}
		}

		console.log('this.BlogsArray2', this.BlogsArray2)
	}

	async onReady() {
		this.loadNextBlogs('recommend', true)
	}

	onHide() {
		clearInterval(this.interval)
		this.BlogsArray.forEach(e => e.playVideo = false)
		this.innerAudioContext.stop()
	}

	onPageScroll() {
		this.BlogsArray.forEach(e => {
			e.playVideo = false
		})
		this.$apply()
	}

	onReachBottom() {
		this.loadNextBlogs(this.currentTab, false);
	}

	onPullDownRefresh() {
		this.loadNextBlogs(this.currentTab, true);
	}

	finishRefresh() {
		wx.stopPullDownRefresh()
		wx.hideLoading()
	}

	onShareAppMessage(e) {
		if (e.from == 'button') {
			let base = '/pages/login/login?redirect=';
			let target = encodeURIComponent(`/pages/blog_detail/blog_detail?id=${e.target.dataset.blog.id}`);
			return {
				title: '这条动态相当奶思！我建议给TA个赞~',
				path: base + target,
				imageUrl: e.target.dataset.blog.author.avatar,
			}
		}
	}

	async loadNextBlogs(type, reset) {
		if (this.isFinishLoad) return;
		if (reset) {
			this.BlogsArray = [];
			this.BlogsArray1 = [];
			this.BlogsArray2 = [];
			this.isFinishLoad = false;
			this.$apply();
		}
		
		wx.showLoading({
			title: '加载中...'
		})

		let blogs = [];
		if (type == "recommend") {
			blogs = await BlogService.getRecommendTrends(reset);
		} else {
			blogs = await BlogService.getHotTrends(reset);
		}

		if (blogs.length < 15) {
			this.isFinishLoad = true;
		}

		for (let i=0; i<blogs.length; i++) {
			let blog = blogs[i];
			blog.is_in_homepage = true;
			blog.comments.forEach(e => {
				e.contentData = WebIMService.Emoji.parseEmoji(e.content)
			})
			this.BlogsArray.push(blog);
			this.BlogsArray2.push(blog)
		}

		const trends = Session.getKey('trends') ? JSON.parse(Session.getKey('trends')) : ''
		if (trends) {
			console.log('trends', trends)
			trends.forEach(trend => {
				if (!this.BlogsArray2.find(e => e.id == trend.id)) {
					this.BlogsArray2.unshift({
						address: trend.address,
						adopt_mpcoin: 0,
						amount: 0,
						author: {
							avatar: 'http://resource.vxiaocheng.com/upload/persistent_avatar/384069933.jpg',
							callup_doyen: false,
							code: "301138012",
							id: 1137699,
							name: "居然还会有人",
							sex: 'male'
						},
						comment_count: 0,
						comments: [],
						content: trend.content,
						id: trend.id,
						created_ago: '刚刚',
						type: trend.type,
						resources: trend.resources,
						is_liked_by_current_user: false
					})
				}
			})
			this.$apply()
		}
		this.$apply();
		console.log(this.BlogsArray);
		setTimeout(() => {
			this.finishRefresh();	
		}, 500);
	}
}
</script>
